rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function userRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Verifica PIN de sector contra colección /demo/{role}.pin
    function validDemo(role, pin) {
      return exists(/databases/$(database)/documents/demo/$(role)) &&
             get(/databases/$(database)/documents/demo/$(role)).data.pin == pin;
    }

    // Usuarios demo (creación con PIN)
    match /users/{uid} {
      allow read: if isSignedIn() && request.auth.uid == uid;
      allow create: if isSignedIn()
        && request.auth.uid == uid
        && request.resource.data.role in ['operacion','elaboracion','materias']
        && validDemo(request.resource.data.role, request.resource.data.pin);
      allow update, delete: if false;
    }

    // Colección de PINs demo (no legible públicamente)
    match /demo/{role} {
      allow read, write: if false; // administrar desde consola; las rules pueden get() igual
    }

    // Tablero + logs (igual que antes)
    function canTransition(role, from, to) {
      return
        (role == 'operacion' && (
          (from == 'sin_solicitud' && to == 'cip_solicitado') ||
          (from == 'hisopado_ok' && to == 'arranque_en_curso') ||
          (from == 'arranque_en_curso' && to == 'produccion_ok') ||
          (from == 'produccion_ok' && to == 'sin_solicitud')
        )) ||
        (role == 'elaboracion' && (
          (from == 'cip_solicitado' && to == 'cip_en_curso') ||
          (from == 'cip_en_curso' && to == 'hisopado_pend')
        )) ||
        (role == 'materias' && (
          (from == 'hisopado_pend' && to == 'hisopado_en_curso') ||
          (from == 'hisopado_en_curso' && (to == 'hisopado_ok' || to == 'cip_solicitado'))
        ));
    }

    match /tableros/{boardId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.current == 'sin_solicitud';
      allow update: if isSignedIn()
        && canTransition(userRole(), resource.data.current, request.resource.data.current);
    }

    match /tableros/{boardId}/logs/{logId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn()
        && request.resource.data.uid == request.auth.uid
        && canTransition(userRole(),
            get(/databases/$(database)/documents/tableros/$(boardId)).data.current,
            request.resource.data.to);
      allow update, delete: if false;
    }
  }
}
